name: CI/CD

on:
  push:
    branches: [ main ]
  release:
    types: [ published ]

env:
  IMAGE_NAME: llama-stack
  IMAGE_REGISTRY: quay.io
  REGISTRY_ORG: rh-ee-jdubrick
  CONTAINER_FILE: Containerfile

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Free Disk Space
        uses: jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true

      - name: Install buildah
        run: |
          sudo apt update
          sudo apt install -y buildah qemu-user-static

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Determine tags
        id: tags
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            TAGS="${{ github.event.release.tag_name }}"
          else
            TAGS="latest\n${{ github.sha }}"
          fi
          echo "tags=$TAGS" >> $GITHUB_OUTPUT

      - name: Build image with Buildah
        id: build_image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.IMAGE_NAME }}
          tags: ${{ steps.tags.outputs.tags }}
          containerfiles: |
            ${{ env.CONTAINER_FILE }}
          archs: amd64, arm64
          oci: true

      - name: Check images
        run: |
          buildah images | grep '${{ env.IMAGE_NAME }}'
          echo 'Image: ${{ steps.build_image.outputs.image }}'
          echo 'Tags: ${{ steps.build_image.outputs.tags }}'

      - name: Check manifest
        run: |
          set -x
          if [[ "${{ github.event_name }}" == "release" ]]; then
            buildah manifest inspect ${{ steps.build_image.outputs.image }}:${{ github.event.release.tag_name }}
          else
            buildah manifest inspect ${{ steps.build_image.outputs.image }}:latest
          fi

      - name: Push image to Quay.io
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build_image.outputs.image }}
          tags: ${{ steps.build_image.outputs.tags }}
          registry: ${{ env.IMAGE_REGISTRY }}/${{ env.REGISTRY_ORG }}
          username: ${{ secrets.QUAY_REGISTRY_USERNAME }}
          password: ${{ secrets.QUAY_REGISTRY_PASSWORD }}
